FORMAT: 1A
HOST: https://api.myallb.com/v1

# allb

    allb v1 API Document

## HTTP Response Codes

HTTP status code described below should be returned by service:

<table>
    <tr>
        <td>200 <code>OK</code></td>
        <td>API should be 200 Code only.</td>
    </tr>
</table>

### Success responses

```
Template
{
    status: ok,
    $(keys): $(vars)
}
```

### Error responses

```
Template
{
    status: not ok,
    code: $(code),
    message: $(message)
}
```

<table>
    <thead>
    <tr>
        <th>Code</th>
        <th>Message</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td><center>400</center></td>
        <td><code>Bad Request</code>
        <div>
            The request was invalid. Usually caused by invalid input data (missing arguments, invalid arguments values, etc.).  Cause of error is described in response.
        </div>
        </td>
    </tr>
    <tr>
        <td><center>401</center></td>
        <td><code>Unauthorized</code>
        <div>
            Authentication failed.
        </div>
        </td>
    </tr>
    <tr>
        <td><center>403</center></td>
        <td><code>Forbidden</code>
        <div>
            You don't have access to resource.
        </div>
        </td>
    </tr>
    <tr>
        <td><center>404</center></td>
        <td><code>Not Found</code>
        <div>
            You're asking for something that doesn't exist.
        </div>
        </td>
    </tr>
    <tr>
        <td><center>500</center></td>
        <td><code>Internal Server Error</code>
        <div>
            Something went wrong. We are sorry, it is our fault and we will make our best to fix it!
        </div>
        </td>
    </tr>
    <tr>
        <td><center>503</center></td>
        <td><code>Temporary Unavailable</code>
        <div>
            This response is typically returned when system is under maintenance.
            Maintenance reason and expected maintenance ent time are also returned in response.
        </div>
        </td>
    </tr>
    <tr>
        <td><center>1062</center></td>
        <td><code>Duplicate</code>
        <div>
        </div>
        </td>
    </tr>
    <tr>
        <td><center>1366</center></td>
        <td><code>Wrong Value</code>
        <div>
        </div>
        </td>
    </tr>
    <tr>
        <td><center>1452</center></td>
        <td><code>A Foreign Key Constraint Fails</code>
        <div>
        </div>
        </td>
    </tr>
    </tbody>
</table>


## HTTP Verbs

* `GET` Used for retrieving resources
* `POST` Used for creating resources
* `PUT` Used for updating existing resources
* `DELETE` Used for deleting resources


## Parameters
Many API methods take optional parameters. For GET requests, 
any parameters not specified as a segment in the path can be passed as an HTTP query string parameter.

For `POST`, `PUT`, and `DELETE` requests, parameters not included in the URL should be encoded as JSON.

    curl -i -b 'allb=session_key; allb.sig=session_sign_key;' -d '{"val":"test"}'
## Responses

* API should be **JSON** only
* Resource URI must be returned in `uri` property
* Any possible metadata related to request or resource should be returned in custom HTTP cookies 


## Accounts Collection [/accounts]

### Signup SMS Code [POST /accounts/send_signup_sms_code]


+ Request (application/json; charset=UTF-8)

    + Attributes
        
        + device_id (string, required)
        + country_code (string, required)
        + recipient_num (string, required)
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "country_code": "+82",
                "recipient_num": "01048160101"
            }


+ Response 200 (application/json)
    
    + Attributes
    
        + status (string)
        
    + Body
    
            {
                "status": "ok"
            }

### Validate Signup SMS Code [POST /accounts/validate_signup_sms_code]

+ Request (application/json; charset=UTF-8)
    
    + Attributes
        
        + device_id (string, required)
        + country_code (string, required)
        + recipient_num (string, required)
        + verification_code (string, required)
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "country_code": "+82",
                "recipient_num": "01048160101"
                "verification_code": "718536"
            }
            
+ Response 200 (application/json)

    + Attributes
    
        + status (string)
                
    + Body
    
            {
                "status": "ok"
            }


### Create User by Phone Number [POST /accounts/create_validated/]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + password (string, required) - hash string 
        + device_id (string, required)
        + verification_code (string, required)
        + country_code (string, required)
        + recipient_num (string, required)
        + full_name (string, required)
        
    + Body
    
            {
                "password": "973b0f95b114646f61132a1cfb3f77f3a1b5d6fd",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "verification_code": "718536",
                "username": "allb",
                "country_code": "+82",
                "recipient_num": "01048160101"
                "full_name": "올비"
            }

+ Response 200 (application/json)
    
    + Headers

            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/

    + Body
        
            {
                "status": "ok",
                "created_user": {
                    "username": "allb",
                    "has_anonymous_profile_picture": true,
                    "full_name": "올비",
                    "user_id": 3508964009,
                    "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg"
                },
                "account_created": true
            }


### Create User by Email [POST /accounts/create/]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + full_name (string, required)
        + password (string, required) - hash string 
        + device_id (string, required)
        + email (string, required)
        + username (string, required)
        
    + Body
    
            {
                "full_name": "올비",
                "password": "973b0f95b114646f61132a1cfb3f77f3a1b5d6fd",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "email": "developer@myallb.com",
                "username": "allb"
            }

+ Response 200 (application/json)
    
    + Headers

            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Body
        
            {
                "status": "ok",
                "created_user": {
                    "username": "allb",
                    "has_anonymous_profile_picture": true,
                    "full_name": "올비",
                    "user_id": 3508964009,
                    "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg"
                },
                "account_created": true
            }
            

### Change Profile Picture [POST /accounts/change_profile_picture]

+ Request (multipart/form-data;boundary=--18049700-A5D6-4E28-AB1D-00108CE7F108)

    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
            Content-Length: 273570
            
    + Body
    
            --18049700-A5D6-4E28-AB1D-00108CE7F108
            Content-Disposition: form-data; name="profile_pic"; filename="profile_pic"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: binary


+ Response 200 (application/json)
        
        {
            "status": "ok",
            "user": {
                "username": "allb",
                "has_anonymous_profile_picture": false,
                "full_name": "올비",
                "user_id": 3508964009,
                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg"
            }
        }
    
### Login by Username [POST /accounts/login]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + username (string, required)
        + password (string, required) - hash string 
        + device_id (string, required)
        + login_attempt_count (number, optional)
        
    + Body
    
            {
                "username": "allb",
                "password": "973b0f95b114646f61132a1cfb3f77f3a1b5d6fd",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "login_attempt_count": 0
            }
            
+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/

    + Body
        
            {
                "logged_in_user": {
                    "username": "allb",
                    "has_anonymous_profile_picture": false,
                    "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "full_name": "올비",
                    "user_id": 3508964009,
                    "fbuid": ""
                },
                "status": "ok"
            }

### Logout [POST /accounts/logout]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
            
    + Attributes
        + device_id (string, required)
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
            }


+ Response 200 (application/json)

    + Body
        
            {
                "status": "ok"
            }

### Reset Password by Email [POST /accounts/send_password_reset/]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + user_id (string, required)
        + device_id (string, required)
        
    + Body
    
            {
                "user_id": "3508964009",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6"
            }

+ Response 200 (application/json)

    + Body
        
            {
                "status": "ok",
                "obfuscated_email": "de*****er@myallb.com"
            }

### Reset Password by SMS [POST /accounts/send_password_sms_reset/]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + user_id (string, required)
        + device_id (string, required)
        
    + Body
    
            {
                "user_id": "3508964009",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6"
            }

+ Response 200 (application/json)

    + Body
        
            {
                "status": "ok",
            }

### Change Password [POST /accounts/change_password/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;

    + Attributes
        + old_password (string, required) - hash string 
        + new_password (string, required) - hash string 
        + device_id (string, required)

    + Body
    
            {
                "old_password": "973b0f95b114646f61132a1cfb3f77f3a1b5d6fd",
                "new_password": "123b0f95b114646f61132a1cfb3f77f3a1b5d6ff",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Body
        
            {
                "status": "ok"
            }
            

### Accounts Session Check [POST /accounts/check/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
    
        + device_id (string, required)
        + user_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "user_id": "3508964009"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok"
            }


## Users Collection [/users]

### Check Username [GET /users/check_username/{username}]

+ Parameters

    + username (string, required)
    
+ Response 200 (application/json)
        
        {
            "status": "ok"
            "username": "allb", 
            "available": true
        }

### Check Email [GET /users/check_email/]

+ Request (application/json; charset=UTF-8)

    + Attributes
    
        + email (string, required)
        + device_id (string, required)
        
    + Body
    
            {
                "email": "developer@myallb.com",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6"
            }
            
+ Response 200 (application/json)
        
    + Body
        
            {
                "available": true,
                "status": "ok",
            }

### Lookup Username [POST /users/lookup/]

+ Request (application/json; charset=UTF-8)

    + Attributes
    
        + q (string, required) - email or id
        
    + Body
    
            {
                "q": "allb"
            }


+ Response 200 (application/json)

    + Body
        
            {
                "status": "ok",
                "can_email_reset": true,
                "can_sms_reset": true,
                "can_fb_reset": false,
                "user": {
                    "username": "allb",
                    "has_anonymous_profile_picture": false,
                    "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "full_name": "올비",
                    "user_id": 3508964009
                }
            }


## Facebook Collection [/fd]

### Create User by FB [POST /fb/fb_signup/]

+ Request (application/json; charset=UTF-8)

    + Attributes
        + device_id (string, required)
        + fb_access_token (string, required) - new User
    
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "fb_access_token": "AAABwzLixnjYBABZCEHK73ZBIDMtyqDOoJdT3Yn1eAxxtnZA345940f3mNv79mNaD9e5x34pZCAACybWuceQG09aZBcbWTS3aaSmtH9C8XGUPo2JDqYZB6h1OkJaUtmGZChYOGMMEcYQZCKYxU9MEZHClJAzi8Jg8Ip0SZA8AYy9lNotkwz4ZBXqOx3sNYyqRTryXnBYZD",
            } 
            

+ Response 200 (application/json)
    new User
    
    + Body
        
            {
                "fb_me": {
                    "first_name": "올비",
                    "last_name": "",
                    "verified": false,
                    "name": "올비",
                    "locale": "ko_KR",
                    "gender": "male",
                    "email": "allb@myallb.com",
                    "link": "https://www.facebook.com/app_scoped_user_id/100012728199493/",
                    "timezone": 9,
                    "updated_time": "2016-07-07T00:08:48+0000",
                    "id": "100012728191493"
                },
                "status": "ok",
                "account_created": false
            }

+ Request (application/json; charset=UTF-8)

    + Attributes
        + device_id (string, required)
        + fb_access_token (string, required) - The users already subscribed
    
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "fb_access_token": "AAABwzLixnjYBABZCEHK73ZBIDMtyqDOoJdT3Yn1eAxxtnZA345940f3mNv79mNaD9e5x34pZCAACybWuceQG09aZBcbWTS3aaSmtH9C8XGUPo2JDqYZB6h1OkJaUtmGZChYOGMMEcYQZCKYxU9MEZHClJAzi8Jg8Ip0SZA8AYy9lNotkwz4ZBXqOx3sNYyqRTryXnBYZD",
            } 
            
+ Response 200 (application/json)
    The users already subscribed
    
    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Body
        
            {
                "logged_in_user": {
                    "username": "allb",
                    "has_anonymous_profile_picture": false,
                    "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "full_name": "올비",
                    "user_id": 3508964009,
                    "fbuid": "100001826920780"
                },
                "status": "ok"
            }


### Store FB Token [POST /fb/store_token]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + fb_access_token (string, required)
    
    + Body
    
            {
                "fb_access_toke": "AAABwzLixnjYBABZCEHK73ZBIDMtyqDOoJdT3Yn1eAxxtnZA345940f3mNv79mNaD9e5x34pZCAACybWuceQG09aZBcbWTS3aaSmtH9C8XGUPo2JDqYZB6h1OkJaUtmGZChYOGMMEcYQZCKYxU9MEZHClJAzi8Jg8Ip0SZA8AYy9lNotkwz4ZBXqOx3sNYyqRTryXnBYZD",
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
             
    + Body
        
            {
                "status": "ok"
            }

## Push Collection [/push]

### Regist Push [POST /push/register/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
    
        + device_id (string, required)
        + device_token (string, required)
        + device_type (enum[string], required)
            + ios
            + android
            + unknown
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "device_token": "af90093f01e0baba123b2047a5dd554321adf9eae22a3ff2e4a9bf7e9a4787b3",
                "device_type": "ios"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
             
    + Body
        
            {
                "status": "ok"
            }



## Find Friends Collection [/address_book]

### Find Friends by Addressbook [POST /address_book/link/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
    
        + device_id (string, required)
        + contacts (array, required)
            + phone_numbers (array, optional)
            + email_addresses (array, optional)
            + first_name (string, required)
            + last_name (string, required)
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "contacts": [
                    {
                        "phone_numbers": [
                            "010-1234-5678"
                        ],
                        "first_name": "에리카",
                        "last_name": "김"
                    },
                    {
                        "email_addresses": [
                            "min@myallb.com"
                        ],
                        "first_name": "",
                        "last_name": "민"
                    },
                    {
                        "phone_numbers": [
                            "010-4321-8765"
                        ],
                        "email_addresses": [
                            "jean@myallb.com"
                        ],
                        "last_name": "",
                        "first_name": "진"
                    }
                ]
            }

+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
        
    + Body
        
            {
                "status": "ok",
                "users": [
                    {
                        "username": "min",
                        "has_anonymous_profile_picture": false,
                        "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                        "full_name": "민",
                        "user_id": 3508964029,
                        "babies_thumbnails": [
                            {
                                "has_anonymous_profile_picture": false,
                                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                            }
                        ]
                    },
                    {
                        "username": "erica",
                        "has_anonymous_profile_picture": false,
                        "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                        "full_name": "엘카",
                        "user_id": 3508964019,
                        "babies_thumbnails": [
                            {
                                "has_anonymous_profile_picture": false,
                                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                            }
                        ]
                    }
                ]
            }

### Find Friends by FB [POST /fb/find/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
            
    + Attributes
    
        + device_id (string, required)
        + fb_access_token (string, required)
        
    + Body
    
            {
                "device_id": "A243E750-217B-43BD-833C-0D141238CAE6",
                "fb_access_token": "AAABwzLixnjYBABZCEHK73ZBIDMtyqDOoJdT3Yn1eAxxtnZA345940f3mNv79mNaD9e5x34pZCAACybWuceQG09aZBcbWTS3aaSmtH9C8XGUPo2JDqYZB6h1OkJaUtmGZChYOGMMEcYQZCKYxU9MEZHClJAzi8Jg8Ip0SZA8AYy9lNotkwz4ZBXqOx3sNYyqRTryXnBYZD"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
        
    + Body
        
            {
                "status": "ok",
                "users": [
                    {
                        "username": "bright",
                        "has_anonymous_profile_picture": false,
                        "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                        "full_name": "브라이트",
                        "user_id": 3508964029,
                        "babies_thumbnails": [
                            {
                                "has_anonymous_profile_picture": false,
                                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                            },
                            {
                                "has_anonymous_profile_picture": false,
                                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                            }
                        ]
                    },
                    {
                        "username": "joshua",
                        "has_anonymous_profile_picture": false,
                        "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                        "full_name": "조수아",
                        "user_id": 3508964019,
                        "babies_thumbnails": [
                            {
                                "has_anonymous_profile_picture": false,
                                "profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                            }
                        ]
                    }
                ]
            }


## Friendships Collection [/friendships]

### Follow User [POST /friendships/follow/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + follow_user_ids (array, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "follow_user_ids": [
                    "3495141195",
                    "3495141196",
                    "3495141197",
                    "3495141198"
                ]
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok",
                "follow_users" : [ 
                    "3495141194"
                    "3495141195",
                    "3495141196",
                    "3495141197",
                    "3495141198",
                    "3495141199"
                ]
            }
            
            
### Unfollow User [POST /friendships/unfollow/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + unfollow_user_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "unfollow_user_id": "3495141195"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok",
                "follow_users" : [ 
                    "3495141194"
                    "3495141196",
                    "3495141197",
                    "3495141198",
                    "3495141199"
                ]
            }



## Babies Collection [/babies]

### Create Baby [POST /babies/create]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + name (string, required)
        + birthday (string, required)
        + gender (enum[string], required)
            + male
            + female
        + skin (enum[number], required)
            + 0 - skin 0
            + 1 - skin 1
            + 2 - skin 2
            + 3 - skin 3
            + 4 - skin 4
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "name": "애옹",
                "birthday": "2013-08-09",
                "gender": "male",
                "skin" : 0
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Attributes
        + status (enum[string], required)
            + ok
            + not ok
        + baby (object, required)
            + id (string, required)
            + onwer_id (string, required)
            + name (string, required)
            + has_anonymous_straight_profile_picture (boolean, required)
            + has_anonymous_prone_profile_picture (boolean, required)
            + straight_profile_url (string, required)
            + prone_profile_url (string, required)
            + gender (enum[string], required)
                + male
                + female
            + birthday (string, required)
            + skin (enum[number], required)
                + 0 - skin 0
                + 1 - skin 1
                + 2 - skin 2
                + 3 - skin 3
                + 4 - skin 4
            + public (boolean, required)
            + state (enum[number], required) 
                + 0 - delete
                + 1 - enable
                + 2 - disable 

    + Body
        
            {
                "status": "ok"
                "baby" : {
                    "id": "3508964019",
                    "onwer_id": "3508964011",
                    "name": "애옹",
                    "has_anonymous_straight_profile_picture": true,
                    "has_anonymous_prone_profile_picture": true,
                    "straight_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "prone_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "gender": "male",
                    "birthday": "2013-08-09",
                    "skin" : 0,
                    "public": false,
                    "state": 0
                }
            }


### Change Straight Profile Picture [POST /babies/change_straight_profile_picture]

+ Request (multipart/form-data;boundary=--18049700-A5D6-4E28-AB1D-00108CE7F108)

    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
            Content-Length: 273570
            
    + Body
    
            --18049700-A5D6-4E28-AB1D-00108CE7F108
            Content-Disposition: form-data; name="profile_pic"; filename="profile_pic"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: binary


+ Response 200 (application/json)
        
    + Body
        
            {
                "status": "ok"
                "baby" : {
                    "id": "3508964019",
                    "onwer_id": "3508964011",
                    "name": "애옹",
                    "has_anonymous_straight_profile_picture": false,
                    "has_anonymous_prone_profile_picture": true,
                    "straight_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "prone_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "gender": "male",
                    "birthday": "2013-08-09",
                    "skin" : 0,
                    "public": false,
                    "state": 0
                }
            }



### Change Prone Profile Picture [POST /accounts/change_prone_profile_picture]

+ Request (multipart/form-data;boundary=--18049700-A5D6-4E28-AB1D-00108CE7F108)

    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
            Content-Length: 273570
            
    + Body
    
            --18049700-A5D6-4E28-AB1D-00108CE7F108
            Content-Disposition: form-data; name="profile_pic"; filename="profile_pic"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: binary


+ Response 200 (application/json)

    + Body
        
            {
                "status": "ok"
                "baby" : {
                    "id": "3508964019",
                    "onwer_id": "3508964011",
                    "name": "애옹",
                    "has_anonymous_straight_profile_picture": true,
                    "has_anonymous_prone_profile_picture": false,
                    "straight_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "prone_profile_url": "http://scontent.myallb.com/t51.2885-19/11906329_960233084022564_1448528159_a.jpg",
                    "gender": "male",
                    "birthday": "2013-08-09",
                    "skin" : 0,
                    "public": false,
                    "state": 0
                }
            }
        

## Allbs Collection [/allbs]

### Check Allb Ids [POST /allbs/check]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + allb_ids (array, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "allb_ids": [ 
                    "allb1234",
                    "allb1235"
                ]
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Attributes
        + status (enum[string], required)
            + ok
            + not ok
        + allbs (array, required)
            + allb
                + id (string, required)
                + registered (boolean, required)
                + connected (boolean, required)
                + onwer_id (string, optional)
                + link_baby_id (string, optional)
                + connect_user_id (string, optional)

    + Body
        
            {
                "status": "ok"
                "allbs": [
                    {
                        "id": "allb1234",
                        "registered": true,
                        "onwer_id": "3508964011",
                        "link_baby_id": "3508964019",
                        "connected": true,
                        "connect_user_id": "3508964011",
                    },
                    {
                        "id": "allb1235",
                        "registered": false
                    }
                ]
            }


### Reset Allb [POST /allbs/reset]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + allb_id (array, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "allb_id": "allb1235"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok"
                "allb": {
                    "id": "allb1235",
                    "registered": false
                }
            }


### Link to Baby [POST /allbs/link]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        + allb_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009",
                "allb_id": "allb1235"
            }

+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok"
                "allb": {
                    "id": "allb1235",
                    "onwer_id": "3508964011",
                    "link_baby_id": "3508964009",
                    "connected": false,
                    "registered": true,
                }
            }


### Unlink Baby [POST /allbs/unlink]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        + allb_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009",
                "allb_id": "allb1235"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Body
        
            {
                "status": "ok"
            }


### Connected Allb [POST /allbs/connected]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        + allb_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009",
                "allb_id": "allb1235"
            }



+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            
    + Body
        
            {
                "status": "ok"
                "allb": {
                    "id": "allb1235",
                    "onwer_id": "3508964011",
                    "link_baby_id": "3508964009",
                    "connected": true,
                    "registered": true,
                    "connect_user_id": "3508964011",
                }
            }



### Disconnected Allb [POST /allbs/disconnected]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        + allb_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009",
                "allb_id": "allb1235"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok"
                "allb": {
                    "id": "allb1235",
                    "onwer_id": "3508964011",
                    "link_baby_id": "3508964009",
                    "connected": false,
                    "registered": true,
                }
            }
            
            
## Statuses Collection [/statuses]

### Send Status [POST /statuses/send]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        + allb_id (string, required)
        + data (object, required)
            + length (number, required) 
            + items (array, required)
                + item 
                    + ts (number, required)
                    + wearing (boolean, required)
                    + ag (number, required)
                    + st (number, required)
                    + state (enum[number], required)
                        + 0 - unknown
                        + 1 - sleep
                        + 2 - activity
                    + rr (number, required)
                    + pt (number, required)
                
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009",
                "allb_id": "allb1235",
                "data": {
                    "length": 4,
                    "items": [
                        {
                            "ts": 1471853460,
                            "wearing": true,
                            "ag": 1.15,
                            "st": 37.5,
                            "state": 1,
                            "rr": 40,
                            "pt": 0
                        },
                        {
                            "ts": 1471853520,
                            "wearing": true,
                            "ag": 1.15,
                            "st": 37.5,
                            "state": 1,
                            "rr": 40,
                            "pt": 1
                        },
                        {
                            "ts": 1471853580,
                            "wearing": true,
                            "ag": 7.15,
                            "st": 37.5,
                            "state": 2,
                            "rr": 0,
                            "pt": 0
                        },
                        {
                            "ts": 1471853640,
                            "wearing": false,
                            "ag": 0,
                            "st": 0,
                            "state": 0,
                            "rr": 0,
                            "pt": 0
                        }
                    ]
                }
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Body
        
            {
                "status": "ok"
            }

### Get Health Status Icon [POST /statuses/health_status_icon/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes
        + device_id (string, required)
        + baby_id (string, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009"
            }

+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
     
    + Attributes
        + status (enum[string], required)
            + ok
            + not ok
        + allb (object, required)
            + id (string, optional)
            + registered (boolean, required)
            + connected (boolean, required)
            + onwer_id (string, optional)
            + link_baby_id (string, optional)
            + connect_user_id (string, optional)
        + health_status(object, optional)
            + ts (number, required) - recent timestamp
            + wearing (boolean, required)
            + ag (number, required)
            + st (number, required)
            + state (enum[number], required)
                + 0 - unknown
                + 1 - sleep
                + 2 - activity
            + rr (number, required)
            + pt (number, required)

    + Body
        
            {
                "status": "ok",
                "allb": {
                    "id": "allb1235",
                    "onwer_id": "3508964011",
                    "link_baby_id": "3508964009",
                    "connected": true,
                    "registered": true, 
                    "connect_user_id": "3508964011"
                },
                "health_status": {
                    "ts": 1471853640,
                    "wearing": false,
                    "ag": 0,
                    "st": 0,
                    "state": 0,
                    "rr": 0,
                    "pt": 0
                }
            }

### Get Status of Days [POST /statuses/list_of_days/{type}]

+ Parameter 
    + type (enum[string], required)
        + sleep
        + breath
        + temperature

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes

        + device_id (string, required)
        + baby_id (string, required)
        + days (array, required)
            + day
                + date (string, required)
                + update_ts (number, required)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "baby_id": "3508964009"
                "days": [
                    {
                        "date": "2016-08-15",
                        "update_ts": 1471853580
                    },
                    {
                        "date": "2016-08-16",
                        "update_ts": 1471853580
                    },
                    {
                        "date": "2016-08-17",
                        "update_ts": 1471853580
                    },
                    {
                        "date": "2016-08-18",
                        "update_ts": 1471853580
                    }
                ]
            }


+ Response 200 (application/json)

    + Headers

            Set-Cookie: allb=1NUT2MTVER-2XL1234567; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/
            Set-Cookie: allb.sig=1NUT2MTVER-2XL1234561; expires=Mon, 03-Oct-2016 11:48:05 GMT; httponly; Max-Age=7776000; Path=/

    + Body
        
            {
                "status": "ok"
                "days": [
                    {
                        "date": "2016-08-15",
                        "modified": true, 
                        "recent_update_ts": 1471853580,
                        "data": [
                            "0": ,
                            "1": ,
                            "2": ,
                            "3": ,
                            "4": ,
                            "5": ,
                            "6": ,
                            "7": ,
                            "8": ,
                            "9": ,
                        ], 
                        "insight": [
                        ]
                    },
                    {
                        "date": "2016-08-16",
                        "modified": false,
                        "recent_update_ts": 1471853580
                    },
                    {
                        "date": "2016-08-18",
                        "modified": true,
                        "recent_update_ts": 1471853580
                    }
                ]
            }


## Channels Collection [/channels]


### Conversations [GET /channels/conversations/]

+ Request (application/json; charset=UTF-8)
    + Headers
            
            Cookie: allb=1NUT2MTVER-2XL1234567; allb.sig=1NUT2MTVER-2XL1234567;
    
    + Attributes

        + unfollow_user_id (string)
        
    + Body
    
            {
                "device_id": "2F33E750-237B-41BD-833C-0D141CD8CAE6",
                "user_id": "3508964009",
                "follow_user_id": "3495141195"
            }


+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: ds_user_id=3508964009; expires=Mon, 03-Oct-2016 11:48:05 GMT; Max-Age=7776000; Path=
     
    + Body
        
            {
                "status": "ok"
            }